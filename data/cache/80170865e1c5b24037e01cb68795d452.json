{"id":"Enum-klasser.txt#content","checksum":"bf55557869f2b9df403aab8b3d458999","text":"An enum type is a special data type that makes it possible to set variables to predetermined constants. Sometimes we want to define a set or a limited number of values ​​in a clear manner, and tying methods and properties to these values. For this, one java enum class. A usage example is when we want to assign cards in a deck color (eng: suit). Instead of using a String in the code, where we write &quot;hearts&quot;, &quot;clover&quot;, etc. can define these colors as constants in a enum class. If you mistype the code when using a String to represent the color (&quot;Save&quot; vs. &quot;crackling&quot;), this will not prevent the execution of code, and you will be able to get cards with a suit is unexpected and has taken into account . This &quot;trap&quot; can be avoided by using enum classes. Enum classes creates a structure in code and eases the understanding of what is done there enum constants are used. It will usually fall very naturally where it is appropriate to use an enum, and often replacing an enum a limited amount of such. strings that describe the concepts we humans can relate to. (This becomes more understandable examples below) A typical application for an enum&#39;s directions. If we want to define the cardinal directions North, South, East and West in a different way than eg. only by their first letter, this can be done using an enum. One can also give enum constants values, which can be retrieved when needed to introduce constants as text, numbers, or other data types. You can also attach methods to the enum constants. The fact that we have these opportunities means that we really can see the enum constants as something along the lines of &quot;hybrid objects&quot;. Enum constants may contain fields and methods, just like regular objects. But you have already defined amount of constants and we can not change the course of the execution of the code."}