{"id":"Objekttilstandsdiagrammer.txt#content","checksum":"759029e4771fa0a29fef72fc0b1fb22f","text":"Object State Diagrams are object diagrams associated with the method call-transitions, so that one can see how different metodkall change the state of the object structures and thus how objects change over time. Note that this chart type is not standard UML, but (inventive) combination / hybrid of two existing chart types, object diagrams and state diagrams. Quite simply affects one object diagrams and connects them with arrows annotated with method calls. Object structure in the from end represents the pre-condition and object structure in the end is in state one gets if the method call is executed. Method calls written as one does in the program code, but with object identity instead of variable references. This type of chart can be used to specify what a method is supposed to do, or to document what the method actually does. Diagrams of this type are easily translatable to a behavior and unit testing unit testing, as the rigs up a pre-condition, performs the code under test and checks for state against expectations. The figure shows a object structure with four objects, one Playlist object and three Song objects, two of the Song objects are linked to Playlist object and one Song object is alone. This object structure is framed as a pre-condition. The method call # 3.addSong (# 4), ie addSong method called the Playlist object with the lonely Song object as an argument, have the effect of tying the argument to Playlist object to object structure is framed as an after-condition shows. If the object structure consists of only one object, so one can omit it and let transisjonspilen go directly from this object. This makes it faster to draw the diagram, but can also make it harder to distinguish this type of chart from the common object diagrams."}