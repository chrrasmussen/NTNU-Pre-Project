{"id":"Swing Timer.txt#content","checksum":"53986ba0c0c54a9e620c0805df783015","text":"Swing has a particular hours, which is suitable for use against GUI. Very simply explained, one can use a swing hours to execute code at regular intervals, in order to make an application to live fully / partially on their own, for specific terms. This builds on the Swing event-driven applications in the swing, but in addition / instead of user interaction events will be triggered by a timer. One very simple example is how a browser update a website. When the application (browser) visit a new website, the timer starts. The timer will call a function in the application every six minutes, which uses current address, and ask about the page. The timer works so we tell it how often it will &quot;beep&quot; and who it will &quot;beep&quot; to, hereafter referred hour&#39;s receiver. The receiver has a method that the timer knowledge, and for each interval called this method at the destination (calling this method is thus a &quot;beep&quot;). Timers with game graphics If we create a GUI consisting of shapes that we want to move on given conditions, the timer can also be used for this. Such a GUI may include graphics in the game Packman, where you control a character who chased the ghost shapes. Occasionally, the figures increased or reduced speed. One way to solve this could be the following: The game board divided into a grid of X and Y coordinates Each character is an object with a velocity in the X direction and velocity in Y-direction (a proportionate number) Object The speed can reduced or increased your character has basically no speed, but getting it through controlled with the arrow key rate will just be a number and can not itself moving object, however: For each event from the timer (eg. every 100 ms ) moving object with its speed in each direction. If the timer &quot;beeps&quot; often enough and the steps of the objects is not too large, the objects will move around and see living out of our eye. In packman-example is all logic related to the behavior of objects completely omitted, in order to clarify the function of the timer has."}