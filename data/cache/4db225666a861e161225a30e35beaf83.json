{"id":"Anonymeklasser.txt#content","checksum":"c765f30677b8e127a52fb2c5dae17b60","text":"An anonymous class is declared and instantiated in an expression, and is either a subclass of another class or implements as the one (and only one) interface. The purpose of an anonymous class will often be a &quot;quick-fix&quot; / fast implementation of an instance that implements an interface or a class you want to make changes on. This is hopefully a little more comprehensible with some examples. Anonymous classes to handle the event if you need to attach a listener to an object that produces / emits events, an anonymous class used. This is especially true if you do not want to specify a new class to handle events a special button send out. Example Example v1 v2 In v2, we see how an anonymous class may be declared and instantiated as part of an expression. It is important to note that there are several &quot;workarounds&quot; for the example above with respect to a button with a special actionPerformed method, but here used anonymous classes as a possible solution. Inline implementation of the interface declaration (and instantiation) of the new action list shoulder in line 8-13 in v2 of the above example is called an inline implementation of the ActionListener interface. Whether to declare a new class to implement a simple interface need not necessarily create a separate class, but rather use an anonymous class in the same manner as above. Another example: Again, one can save themselves the trouble of creating a new class if you only need one instance of it in a / get place (s) in your code. Make dog on; many anonymous classes can quickly make your code confusing. Inline over riding of methods through inheritance Just as with the implementation of the interface, one can also inherit classes inline by creating an anonymous class. This can be particularly useful when for example. want to create one instance of a class, to override one or few methods. See the example below. The example above shows how an instance, sum, subclasses TextField and inline overwrite methods ReplaceText and replaceSelection. Text Field sum is intended as a field that will only have input in the form of numerical values, and the method sets the text is changed to sound if someone writes text in the field."}