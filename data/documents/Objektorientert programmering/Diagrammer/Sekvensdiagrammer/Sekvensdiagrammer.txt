<p><ac:link><ri:page ri:content-title="Klassediagrammer" /><ac:plain-text-link-body><![CDATA[Klassediagrammer]]></ac:plain-text-link-body></ac:link> gir et statisk bilde av klassene i et program, mens&nbsp;<ac:link><ri:page ri:content-title="Objektdiagrammer" /><ac:plain-text-link-body><![CDATA[objektdiagrammer]]></ac:plain-text-link-body></ac:link>gir et statisk bilde av objektstrukturer ved kj&oslash;retid. Like viktig er det &aring; kunne illustrere hva som skjer eller burde skje ved kj&oslash;retid, dvs. den dynamisk oppf&oslash;rselen til programmer.<ac:macro ac:name="excerpt"><ac:parameter ac:name="atlassian-macro-output-type">INLINE</ac:parameter><ac:rich-text-body><p>Sekvensdiagrammer er en <ac:link><ri:page ri:content-title="Diagrammer" /><ac:plain-text-link-body><![CDATA[diagramtype]]></ac:plain-text-link-body></ac:link> som viser hvordan objekter samhandler, dvs. i hvilken sekvens objekter utf&oslash;rer metodekall p&aring; hverandre.</p></ac:rich-text-body></ac:macro>Dynamisk oppf&oslash;rsel handler om hva som skjer over tid, og sekvensdiagrammer har en implisitt tidslinje og viser hvordan akt&oslash;rer og komponenter i et system &quot;samhandler&quot; over tid ved &aring; sende &quot;meldinger&quot;.&nbsp; Begrepene akt&oslash;rer, komponenter og meldinger kan gis ulike tolkninger, men hovedsaklig dreier det seg om to typer bruk:</p><ol><li>P&aring; et overordnet niv&aring;: utveksling av informasjon mellom brukere, brukergrensesnitt (klienter) og tjenester (servere). Denne varianten brukes gjerne tidlig ved utvikling av system, for &aring; f&aring; oversikt over hvordan brukeren &oslash;nsker &aring; bruke et system og hvordan ulike deler av system st&oslash;tter denne bruken.</li><li>P&aring; et detaljert niv&aring;: metodekall som utf&oslash;res mellom objekter. Denne varianten brukes ved forut for og til hjelp ved koding, eller som dokumentasjon p&aring; virkem&aring;ten.</li></ol><p>For begge typer bruk, er m&aring;let &aring; illustrere av <em>oppf&oslash;rsel i et tenkt tilfelle</em>, ved bruk/kj&oslash;ring av et system. For et mindre system, f.eks. et lite spill med f&aring; objekter, s&aring; smelter disse to typene bruk sammen. Under til venstre er et eksempel p&aring; variant 1 for et tenkt system som svarer p&aring; eksistensielle sp&oslash;rsm&aring;l:</p><table><tbody><tr><td><ac:macro ac:name="plantuml"><ac:parameter ac:name="atlassian-macro-output-type">BLOCK</ac:parameter><ac:parameter ac:name="border">1</ac:parameter><ac:plain-text-body><![CDATA[actor Bruker
Bruker -> Klient: "Hva er meningen med livet?"
Klient -> Tjener: meningenMedLivet
Tjener --> Klient: 42
Klient --> Bruker: "Svaret er 42"]]></ac:plain-text-body></ac:macro></td><td><ac:macro ac:name="plantuml"><ac:parameter ac:name="atlassian-macro-output-type">BLOCK</ac:parameter><ac:parameter ac:name="border">1</ac:parameter><ac:plain-text-body><![CDATA[actor Ola
Ola -> "#1: Hovedprogram": "Hva er meningen med livet?"
"#1: Hovedprogram" -> "#2: Logikk": meningenMedLivet()
"#2: Logikk" --> "#1: Hovedprogram": 42
"#1: Hovedprogram" --> Ola: "Svaret er 42"]]></ac:plain-text-body></ac:macro></td></tr></tbody></table><p>Strekmannen &oslash;verst representerer en person/bruker, mens boksene representerer systemkomponenter. Strekene nedover er tidslinjer, mens strekene p&aring; tvers er meldingsflyt. Akkurat hva slags melding det dreier seg om og hvordan den formidles, f.eks. noe brukeren skriver inn, XML som sendes over nettet eller enkle metodekall, er ikke viktig. Det viktige er informasjonsinnholdet og sekvensen. I tillegg er det vanlig &aring; vise om noe regnes som svar (eng: response) p&aring; et sp&oslash;rsm&aring;l (eng: request), ved &aring; bruke stiplet linje.</p><p>Den andre varianten ser egentlig helt lik ut, men da tolkes boksene &oslash;verst som objekter, meldingene som metodekall og evt. svar-streker som returverdier. Siden diagrammet illustrerer faktisk kj&oslash;ring, s&aring; har gjerne boksene &oslash;verst konkrete navn eller id'er og teksten p&aring; meldingsstrekene er konkrete metodekall med argumentverdier eller returverdier. Dersom en av objektene &oslash;verst ogs&aring; opptrer som argumenter og/eller returverdier, s&aring; brukes navnet eller id'en.</p><p>&nbsp;</p><ac:macro ac:name="metadata-list"><ac:parameter ac:name="orientation">horizontal</ac:parameter><ac:plain-text-body><![CDATA[|| Sidetype | teori |
|| Ferdig | 50 |
|| Dekningsgrad | 25 |
|| Omfang | 50 |]]></ac:plain-text-body></ac:macro>