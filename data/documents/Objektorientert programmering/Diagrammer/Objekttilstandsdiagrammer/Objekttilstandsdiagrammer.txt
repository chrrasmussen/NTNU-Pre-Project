<p>&nbsp;</p><p>Objekttilstandsdiagrammer er objektdiagrammer knyttet sammen med metodekall-transisjoner, slik at en ser hvordan ulike metodkall endrer tilstanden til objektstrukturer og dermed hvordan objektene endres over tid. Merk at denne diagramtypen ikke er standard UML, men en (oppfinnsom) kombinasjon/hybrid av to eksisterende diagramtyper, objektdiagrammer og tilstandsdiagrammer.</p><p>Enkelt sagt s&aring; rammer en inn objektdiagrammer og knytter disse sammen med piler annotert med metodekall. Objektstrukturen i fra-enden representerer f&oslash;r-tilstanden og objektstrukturen i til-enden er etter-tilstanden en f&aring;r dersom metodekallet utf&oslash;res. Metodekallene skrives slik en gj&oslash;r i programkode, men med objektidentitet istedenfor variabelreferanser.</p><p>Denne diagramtypen kan brukes til &aring; spesifisere hva en metode er ment &aring; gj&oslash;re, eller til &aring; dokumentere hva metoden faktisk gj&oslash;r. Diagrammer av denne typen er lett &aring; oversette til en <ac:link><ri:page ri:content-title="Oppf&oslash;rsel og enhetstesting" /><ac:plain-text-link-body><![CDATA[enhetstest]]></ac:plain-text-link-body></ac:link>, som jo rigger opp en f&oslash;r-tilstand, utf&oslash;rer koden som skal testes og sjekker etter-tilstanden mot forventningene.</p><table><tbody><tr><td><ac:macro ac:name="lucidchart"><ac:parameter ac:name="id">4304-6848-5225c542-ab8b-122e0a00df12</ac:parameter><ac:parameter ac:name="height">665</ac:parameter><ac:parameter ac:name="width">700</ac:parameter><ac:parameter ac:name="name">Objektdiagrameksempel-453-2a50d1af</ac:parameter><ac:parameter ac:name="auto-update">true</ac:parameter><ac:parameter ac:name="align">Left</ac:parameter></ac:macro></td><td><p>Figuren viser en objektstruktur med fire objekter, ett <strong>Playlist</strong>-objekt og tre <strong>Song</strong>-objekter, hvorav to av <strong>Song</strong>-objektene er knyttet til <strong>Playlist</strong>-objektet og ett <strong>Song</strong>-objekt er alene. Denne objektstrukturen er rammet inn som en f&oslash;r-tilstand.</p><p>Metodekallet <strong>#3.addSong(#4)</strong>, alts&aring; <strong>addSong</strong>-metoden kalt p&aring; <strong>Playlist</strong>-objekt med det ensomme <strong>Song</strong>-objektet som argument, har som effekt &aring; knytte argumentet til <strong>Playlist</strong>-objektet, slik objektstrukturen som er rammet inn som en etter-tilstand viser.</p></td></tr></tbody></table><p>Dersom objektstrukturen kun best&aring;r av ett objekt, s&aring; kan en utelate innrammingen og la transisjonspilen g&aring; direkte fra dette objektet. Dette gj&oslash;r det raskere &aring; tegne diagrammet, men kan ogs&aring; gj&oslash;re det verre &aring; skille denne diagramtypen fra vanlige objektdiagrammer.</p><ac:macro ac:name="plantuml"><ac:parameter ac:name="atlassian-macro-output-type">BLOCK</ac:parameter><ac:plain-text-body><![CDATA[object "#1: Person" as p1 {
	name = null
}

object "#1: Person" as p2 {
	name = "Ola Nordmann"
}
p1 -> p2: #1.setName("Ola Nordmann")
]]></ac:plain-text-body></ac:macro><ac:macro ac:name="metadata-list"><ac:parameter ac:name="orientation">horizontal</ac:parameter><ac:plain-text-body><![CDATA[|| Sidetype | teori |
|| Ferdig | 95 |
|| Dekningsgrad | 75 |
|| Omfang | 50 |]]></ac:plain-text-body></ac:macro>