<p>Debuggeren er et verkt&oslash;y som brukes til &aring; analysere kj&oslash;rende kode. Den kommer med et eget perspektiv, som du vinner ved &aring; velge &quot;Debug&quot; &oslash;verst i h&oslash;yre hj&oslash;rne av skjermen. Dersom dette valget ikke vises, kan du trykke p&aring; den lille hvite knappen med et pluss-tegn like ved, velge Debug fra listen og trykke OK. For &aring; komme tilbake til det gamle perspektivet velger du &quot;Java&quot; fra samme sted.&nbsp;</p><p><ac:image ac:width="300"><ri:attachment ri:filename="Find_debugger.png"><ri:page ri:content-title="Feilfinning" /></ri:attachment></ac:image>&nbsp;</p><h2><span>Breakpoints</span></h2><p>N&aring;r du debugger kode har du muligheten til &aring; stoppe midt i et kj&oslash;rende program. Da m&aring; du fortelle Eclipse&nbsp;<strong>hvor</strong>&nbsp;du &oslash;nsker at programmet skal stoppe. Dette gj&oslash;res ved &aring; markere koden med et&nbsp;<em>breakpoint</em>. Du kan sette inn et punkt ved &aring; dobbeltklikke i margen til venstre for den linjen du befinner deg p&aring; - da dukker&nbsp;det&nbsp;opp en liten bl&aring; sirkel. Legg ogs&aring; merke til at du kan velge &quot;Breakpoints&quot; oppe til h&oslash;yre. Her f&aring;r du opp en liste over alle punkter du har lagt til.&nbsp;</p><p><ac:image ac:width="500"><ri:attachment ri:filename="Debug_perspective.png"><ri:page ri:content-title="Feilfinning" /></ri:attachment></ac:image></p><p>N&aring;r du legger inn breakpoints vil Eclipse stoppe rett&nbsp;<em>f&oslash;r</em>&nbsp;linjen med breakpointet kj&oslash;res. Dersom du starter &aring; debugge programmet i eksempelet over vil du derfor ikke f&aring; vite verdien av&nbsp;<strong>isEven</strong>, siden den ikke finnes f&oslash;r linjen har kj&oslash;rt. Du vil derimot f&aring; vite verdien av&nbsp;<strong>isOdd</strong>&nbsp;siden denne nettopp har blitt evaluert. Ved &aring; velge &quot;Variables&quot; oppe til h&oslash;yre p&aring; skjermen f&aring;r du en oversikt over alle variabler som finnes i programmet, samt verdien de har. Dersom du bare vil vite verdien p&aring; en enkelt variabel kan du holde musepekeren over den i kodevinduet.</p><p>For at Eclipse skal ta hensyn til breakpointene m&aring; du kj&oslash;re koden i debuggingsmodus. Denne finner du rett ved siden av knappen for &quot;kj&oslash;r&quot;. Se figuren under.&nbsp;</p><p><ac:image><ri:attachment ri:filename="StartDebug.png"><ri:page ri:content-title="Feilfinning" /></ri:attachment></ac:image></p><p>N&aring; er du i gang og programmet vil, som nevnt over, stoppe&nbsp;<em>f&oslash;r</em>&nbsp;det f&oslash;rste breakpointet det finner.</p><h2>Navigere i et stoppet program</h2><p>N&aring;r et program har stoppet ved et breakpoint har du ulike m&aring;ter &aring; fortsette p&aring;. De to store mulighetene er &aring; <strong>fortsette</strong><strong>&nbsp;</strong>eller &aring; <strong>steppe&nbsp;</strong>gjennom koden. &Aring; fortsette betyr at man kj&oslash;rer koden til neste breakpoint, mens &aring; steppe betyr at man kj&oslash;rer kodelinjene p&aring; kommando fra brukeren. De viktigste knappene for &aring; navigere i et stoppet program er vist p&aring; figuren nedenfor.&nbsp;</p><p><ac:image ac:width="500"><ri:attachment ri:filename="Debug_control.png" /></ac:image></p><p>En forklaring p&aring; de ulike knappene, fra venstre mot h&oslash;yre, er gitt nedenfor. De du kommer til &aring; bruke desidert mest er notert med fet skrift.</p><ul><li><strong>Resume:&nbsp;</strong>Koden kj&oslash;res frem til neste breakpoint</li><li>Suspend:&nbsp;Brukes for &aring; avslutte <em>tr&aring;der</em> (ikke pensum)</li><li><strong>Terminate:&nbsp;</strong>Avslutter kj&oslash;ringen</li><li>Disconnect: Brukes hvis du degbugger et program som ikke er p&aring; din lokale maskin (ikke pensum)</li><li><strong>Step into:&nbsp;</strong>En del av steppe-funksjonen. G&aring;r inn i neste blokk med kode. Dersom det er et metodekall p&aring; neste linje som skal utf&oslash;res, vil Step into ta deg inn i denne slik at du kan fortsette debuggingen der.&nbsp;</li><li><strong>Step over:</strong> Tar deg til neste kodelinje&nbsp;<em>i den filen du er i n&aring;</em>. Dersom du har et metodekall p&aring; linjen vil du alts&aring; ikke g&aring; inn i denne metoden.&nbsp;</li><li><strong>Step return</strong>: Dersom du har brukt Step into for &aring; komme inn i en metode vil Step return ta deg ut igjen.&nbsp;</li><li>Drop to frame: Eclipse har st&oslash;tte for &aring; &quot;g&aring; bakover&quot;. (???)</li><li>Use Step Filters: Debuggeren har st&oslash;tte for &aring; filtrere ut klasser man ikke &oslash;nsker &aring; debugge. Denne funksjonen tvinger alle step-knapper til &aring; bruke disse filtrene.</li></ul><p>&nbsp;</p><p>&nbsp;</p>